{
  "info": {
    "_postman_id": "2c6c3871-70ea-43ee-8f96-7e8e78868645",
    "name": "Petstore - AKH",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "18714623"
  },
  "item": [
    {
      "name": "Add a new pet to the store",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful POST request\", function () {\r",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201, 202]);\r",
              "});\r",
              "pm.test(\"Response time is less than 2000ms\", function () {\r",
              "    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
              "});\r",
              "pm.test(\"DogName returned in response\", function () {\r",
              "    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"dogName\"));\r",
              "});\r",
              "\r",
              "var jsonData = JSON.stringify(responseBody)\r",
              "var id = jsonData.substring(9,28)\r",
              "console.log(id)\r",
              "pm.collectionVariables.set(\"petId\", id);"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.collectionVariables.set(\"dogName\", \"Coin\");"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "oauth2"
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"{{dogName}}\",\n   \"id\": 0,\n  \"photoUrls\": [\n      \"https://i.ytimg.com/vi/Yj7ja6BANLM/maxresdefault.jpg\"\n  ],\n  \"category\": {\n    \"id\": 65584482,\n    \"name\": \"Doge\"\n  },\n  \"tags\": [\n    {\n      \"id\": 26144311,\n      \"name\": \"Dogs\"\n    },\n    {\n      \"id\": -84393476,\n      \"name\": \"Doge\"\n    }\n  ],\n  \"status\": \"available\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/pet",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "pet"
          ]
        }
      },
      "response": [
        {
          "name": "Invalid input",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "description": "Added as a part of security scheme: oauth2",
                "key": "Authorization",
                "value": "<token>"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/pet",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet"
              ]
            }
          },
          "status": "Method Not Allowed",
          "code": 405,
          "_postman_previewlanguage": "text",
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "Find pet by ID",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "pm.test(\"Response time is less than 2000ms\", function () {\r",
              "    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
              "});\r",
              "var jsonData = pm.response.json();\r",
              "pm.test(\"Pet name should match\", function () {\r",
              "    pm.expect(jsonData.name).to.be.equals(pm.collectionVariables.get(\"dogName\"));\r",
              "});\r",
              "pm.test(\"Pet status should match\", function () {\r",
              "    pm.expect(jsonData.status).to.be.equals(\"available\");\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "key",
              "value": "api_key",
              "type": "string"
            },
            {
              "key": "value",
              "value": "<API Key>",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/pet/:petId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "pet",
            ":petId"
          ],
          "variable": [
            {
              "key": "petId",
              "value": "{{petId}}"
            }
          ]
        },
        "description": "Returns a single pet"
      },
      "response": [
        {
          "name": "successful operation",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "description": "Added as a part of security scheme: apikey",
                "key": "api_key",
                "value": "<API Key>"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/pet/:petId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet",
                ":petId"
              ],
              "variable": [
                {
                  "key": "petId",
                  "value": "85284518",
                  "description": "(Required) ID of pet to return"
                }
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"cupidatat est id velit\",\n    \"sunt irure elit ullamco\"\n  ],\n  \"id\": 96833940,\n  \"category\": {\n    \"id\": -38155741,\n    \"name\": \"nulla deserunt adipisicing\"\n  },\n  \"tags\": [\n    {\n      \"id\": -76699744,\n      \"name\": \"consectetur Excepteur esse\"\n    },\n    {\n      \"id\": 79322425,\n      \"name\": \"ut pariatur\"\n    }\n  ],\n  \"status\": \"sold\"\n}"
        },
        {
          "name": "Invalid ID supplied",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "description": "Added as a part of security scheme: apikey",
                "key": "api_key",
                "value": "<API Key>"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/pet/:petId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet",
                ":petId"
              ],
              "variable": [
                {
                  "key": "petId",
                  "value": "85284518",
                  "description": "(Required) ID of pet to return"
                }
              ]
            }
          },
          "status": "Bad Request",
          "code": 400,
          "_postman_previewlanguage": "text",
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "cookie": [],
          "body": ""
        },
        {
          "name": "Pet not found",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "description": "Added as a part of security scheme: apikey",
                "key": "api_key",
                "value": "<API Key>"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/pet/:petId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet",
                ":petId"
              ],
              "variable": [
                {
                  "key": "petId",
                  "value": "85284518",
                  "description": "(Required) ID of pet to return"
                }
              ]
            }
          },
          "status": "Not Found",
          "code": 404,
          "_postman_previewlanguage": "text",
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "Updates a pet in the store with form data",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.collectionVariables.set(\"changedName\", \"Paper\");\r",
              "pm.collectionVariables.set(\"changedStatus\", \"sold\");"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "pm.test(\"Response time is less than 2000ms\", function () {\r",
              "    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "oauth2"
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/x-www-form-urlencoded"
          }
        ],
        "body": {
          "mode": "urlencoded",
          "urlencoded": [
            {
              "key": "name",
              "value": "{{changedName}}",
              "description": "Updated name of the pet"
            },
            {
              "key": "status",
              "value": "{{changedStatus}}",
              "description": "Updated status of the pet"
            }
          ]
        },
        "url": {
          "raw": "{{baseUrl}}/pet/:petId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "pet",
            ":petId"
          ],
          "variable": [
            {
              "key": "petId",
              "value": "{{petId}}",
              "description": "(Required) ID of pet that needs to be updated"
            }
          ]
        }
      },
      "response": [
        {
          "name": "Invalid input",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "description": "Added as a part of security scheme: oauth2",
                "key": "Authorization",
                "value": "<token>"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "name",
                  "value": "in",
                  "description": "Updated name of the pet"
                },
                {
                  "key": "status",
                  "value": "Lorem",
                  "description": "Updated status of the pet"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/pet/:petId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet",
                ":petId"
              ],
              "variable": [
                {
                  "key": "petId",
                  "value": "85284518",
                  "description": "(Required) ID of pet that needs to be updated"
                }
              ]
            }
          },
          "status": "Method Not Allowed",
          "code": 405,
          "_postman_previewlanguage": "text",
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "Find pet by ID after Update",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "pm.test(\"Response time is less than 2000ms\", function () {\r",
              "    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
              "});\r",
              "pm.test(\"Checks Values are changed\", function () {\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"changedName\"));\r",
              "    pm.expect(jsonData.status).to.eql(pm.collectionVariables.get(\"changedStatus\"));\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "key",
              "value": "api_key",
              "type": "string"
            },
            {
              "key": "value",
              "value": "<API Key>",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/pet/:petId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "pet",
            ":petId"
          ],
          "variable": [
            {
              "key": "petId",
              "value": "{{petId}}",
              "description": "(Required) ID of pet to return"
            }
          ]
        },
        "description": "Returns a single pet"
      },
      "response": [
        {
          "name": "successful operation",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "description": "Added as a part of security scheme: apikey",
                "key": "api_key",
                "value": "<API Key>"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/pet/:petId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet",
                ":petId"
              ],
              "variable": [
                {
                  "key": "petId",
                  "value": "85284518",
                  "description": "(Required) ID of pet to return"
                }
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"cupidatat est id velit\",\n    \"sunt irure elit ullamco\"\n  ],\n  \"id\": 96833940,\n  \"category\": {\n    \"id\": -38155741,\n    \"name\": \"nulla deserunt adipisicing\"\n  },\n  \"tags\": [\n    {\n      \"id\": -76699744,\n      \"name\": \"consectetur Excepteur esse\"\n    },\n    {\n      \"id\": 79322425,\n      \"name\": \"ut pariatur\"\n    }\n  ],\n  \"status\": \"sold\"\n}"
        },
        {
          "name": "Invalid ID supplied",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "description": "Added as a part of security scheme: apikey",
                "key": "api_key",
                "value": "<API Key>"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/pet/:petId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet",
                ":petId"
              ],
              "variable": [
                {
                  "key": "petId",
                  "value": "85284518",
                  "description": "(Required) ID of pet to return"
                }
              ]
            }
          },
          "status": "Bad Request",
          "code": 400,
          "_postman_previewlanguage": "text",
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "cookie": [],
          "body": ""
        },
        {
          "name": "Pet not found",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "description": "Added as a part of security scheme: apikey",
                "key": "api_key",
                "value": "<API Key>"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/pet/:petId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet",
                ":petId"
              ],
              "variable": [
                {
                  "key": "petId",
                  "value": "85284518",
                  "description": "(Required) ID of pet to return"
                }
              ]
            }
          },
          "status": "Not Found",
          "code": 404,
          "_postman_previewlanguage": "text",
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "Deletes the pet",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "pm.test(\"Response time is less than 2000ms\", function () {\r",
              "    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "oauth2"
        },
        "method": "DELETE",
        "header": [
          {
            "key": "api_key",
            "value": "sunt pariatur culpa"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/pet/:petId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "pet",
            ":petId"
          ],
          "variable": [
            {
              "key": "petId",
              "value": "{{petId}}",
              "description": "(Required) Pet id to deletei"
            }
          ]
        }
      },
      "response": [
        {
          "name": "Invalid ID supplied",
          "originalRequest": {
            "method": "DELETE",
            "header": [
              {
                "description": "Added as a part of security scheme: oauth2",
                "key": "Authorization",
                "value": "<token>"
              },
              {
                "key": "api_key",
                "value": "sunt pariatur culpa"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/pet/:petId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet",
                ":petId"
              ],
              "variable": [
                {
                  "key": "petId",
                  "value": "85284518",
                  "description": "(Required) Pet id to delete"
                }
              ]
            }
          },
          "status": "Bad Request",
          "code": 400,
          "_postman_previewlanguage": "text",
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "cookie": [],
          "body": ""
        },
        {
          "name": "Pet not found",
          "originalRequest": {
            "method": "DELETE",
            "header": [
              {
                "description": "Added as a part of security scheme: oauth2",
                "key": "Authorization",
                "value": "<token>"
              },
              {
                "key": "api_key",
                "value": "sunt pariatur culpa"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/pet/:petId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet",
                ":petId"
              ],
              "variable": [
                {
                  "key": "petId",
                  "value": "85284518",
                  "description": "(Required) Pet id to delete"
                }
              ]
            }
          },
          "status": "Not Found",
          "code": 404,
          "_postman_previewlanguage": "text",
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "Deletes a pet again",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Should return 404  when the petId does not exist or already deleted\r",
              "pm.test(\"Status code is 404\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "});\r",
              "pm.test(\"Response time is less than 2000ms\", function () {\r",
              "    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "oauth2"
        },
        "method": "DELETE",
        "header": [
          {
            "key": "api_key",
            "value": "sunt pariatur culpa"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/pet/:petId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "pet",
            ":petId"
          ],
          "variable": [
            {
              "key": "petId",
              "value": "{{petId}}",
              "description": "(Required) Pet id to deletei"
            }
          ]
        }
      },
      "response": [
        {
          "name": "Invalid ID supplied",
          "originalRequest": {
            "method": "DELETE",
            "header": [
              {
                "description": "Added as a part of security scheme: oauth2",
                "key": "Authorization",
                "value": "<token>"
              },
              {
                "key": "api_key",
                "value": "sunt pariatur culpa"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/pet/:petId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet",
                ":petId"
              ],
              "variable": [
                {
                  "key": "petId",
                  "value": "85284518",
                  "description": "(Required) Pet id to delete"
                }
              ]
            }
          },
          "status": "Bad Request",
          "code": 400,
          "_postman_previewlanguage": "text",
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "cookie": [],
          "body": ""
        },
        {
          "name": "Pet not found",
          "originalRequest": {
            "method": "DELETE",
            "header": [
              {
                "description": "Added as a part of security scheme: oauth2",
                "key": "Authorization",
                "value": "<token>"
              },
              {
                "key": "api_key",
                "value": "sunt pariatur culpa"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/pet/:petId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet",
                ":petId"
              ],
              "variable": [
                {
                  "key": "petId",
                  "value": "85284518",
                  "description": "(Required) Pet id to delete"
                }
              ]
            }
          },
          "status": "Not Found",
          "code": 404,
          "_postman_previewlanguage": "text",
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "Find Deleted Pet",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "});\r",
              "pm.test(\"Response time is less than 2000ms\", function () {\r",
              "    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
              "});\r",
              "//Set values for GetByStatus\r",
              "const statusList = [\"available\", \"sold\", \"pending\"];\r",
              "pm.collectionVariables.set(\"statusList\", statusList); "
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "key",
              "value": "api_key",
              "type": "string"
            },
            {
              "key": "value",
              "value": "<API Key>",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/pet/:petId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "pet",
            ":petId"
          ],
          "variable": [
            {
              "key": "petId",
              "value": "{{petId}}",
              "description": "(Required) ID of pet to return"
            }
          ]
        },
        "description": "Returns a single pet"
      },
      "response": [
        {
          "name": "successful operation",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "description": "Added as a part of security scheme: apikey",
                "key": "api_key",
                "value": "<API Key>"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/pet/:petId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet",
                ":petId"
              ],
              "variable": [
                {
                  "key": "petId",
                  "value": "85284518",
                  "description": "(Required) ID of pet to return"
                }
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"cupidatat est id velit\",\n    \"sunt irure elit ullamco\"\n  ],\n  \"id\": 96833940,\n  \"category\": {\n    \"id\": -38155741,\n    \"name\": \"nulla deserunt adipisicing\"\n  },\n  \"tags\": [\n    {\n      \"id\": -76699744,\n      \"name\": \"consectetur Excepteur esse\"\n    },\n    {\n      \"id\": 79322425,\n      \"name\": \"ut pariatur\"\n    }\n  ],\n  \"status\": \"sold\"\n}"
        },
        {
          "name": "Invalid ID supplied",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "description": "Added as a part of security scheme: apikey",
                "key": "api_key",
                "value": "<API Key>"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/pet/:petId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet",
                ":petId"
              ],
              "variable": [
                {
                  "key": "petId",
                  "value": "85284518",
                  "description": "(Required) ID of pet to return"
                }
              ]
            }
          },
          "status": "Bad Request",
          "code": 400,
          "_postman_previewlanguage": "text",
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "cookie": [],
          "body": ""
        },
        {
          "name": "Pet not found",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "description": "Added as a part of security scheme: apikey",
                "key": "api_key",
                "value": "<API Key>"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/pet/:petId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet",
                ":petId"
              ],
              "variable": [
                {
                  "key": "petId",
                  "value": "85284518",
                  "description": "(Required) ID of pet to return"
                }
              ]
            }
          },
          "status": "Not Found",
          "code": 404,
          "_postman_previewlanguage": "text",
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "Find Pets by Invalid status",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "  pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
              "});\r",
              "pm.test(\"Response time is less than 2000ms\", function () {\r",
              "    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
              "});\r",
              "pm.test(\"Should return Empty response\", () => {\r",
              "    const response = pm.response.json();\r",
              "    pm.expect(response.length).to.eql(0);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "oauth2"
        },
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/pet/findByStatus?status=DoesNotExist&status=InvalidStatus",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "pet",
            "findByStatus"
          ],
          "query": [
            {
              "key": "status",
              "value": "DoesNotExist",
              "description": "(Required) Status values that need to be considered for filter"
            },
            {
              "key": "status",
              "value": "InvalidStatus",
              "description": "(Required) Status values that need to be considered for filter"
            }
          ]
        },
        "description": "Multiple status values can be provided with comma separated strings"
      },
      "response": [
        {
          "name": "successful operation",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "description": "Added as a part of security scheme: oauth2",
                "key": "Authorization",
                "value": "<token>"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/pet/findByStatus?status=available&status=available",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet",
                "findByStatus"
              ],
              "query": [
                {
                  "key": "status",
                  "value": "available"
                },
                {
                  "key": "status",
                  "value": "available"
                }
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "[\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"labore eiusmod\",\n      \"labore consectetur incididunt qui\"\n    ],\n    \"id\": -34991016,\n    \"category\": {\n      \"id\": -20752171,\n      \"name\": \"laborum co\"\n    },\n    \"tags\": [\n      {\n        \"id\": -4948717,\n        \"name\": \"sint dolor veniam exercitation culpa\"\n      },\n      {\n        \"id\": 80696629,\n        \"name\": \"culpa \"\n      }\n    ],\n    \"status\": \"available\"\n  },\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"irure consequat\",\n      \"dolore veniam inc\"\n    ],\n    \"id\": 210321,\n    \"category\": {\n      \"id\": -10537877,\n      \"name\": \"sit incididunt\"\n    },\n    \"tags\": [\n      {\n        \"id\": -2794044,\n        \"name\": \"cupidatat sed magna lab\"\n      },\n      {\n        \"id\": -86416510,\n        \"name\": \"commodo cupidatat Ut\"\n      }\n    ],\n    \"status\": \"sold\"\n  }\n]"
        },
        {
          "name": "Invalid status value",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "description": "Added as a part of security scheme: oauth2",
                "key": "Authorization",
                "value": "<token>"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/pet/findByStatus?status=available&status=available",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet",
                "findByStatus"
              ],
              "query": [
                {
                  "key": "status",
                  "value": "available"
                },
                {
                  "key": "status",
                  "value": "available"
                }
              ]
            }
          },
          "status": "Bad Request",
          "code": 400,
          "_postman_previewlanguage": "text",
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "Find Pets by valid status",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "const listofStatus = pm.collectionVariables.get(\"statusList\");\r",
              "\r",
              "pm.variables.set('status', listofStatus.shift());\r",
              "pm.collectionVariables.set(\"statusList\", listofStatus); \r",
              "\r",
              "if(Array.isArray(listofStatus) && listofStatus.length > 0){\r",
              "    postman.setNextRequest('Find Pets by valid status');\r",
              "} else {\r",
              "    postman.setNextRequest(null);\r",
              "}"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "pm.test(\"Response time is less than 2000ms\", function () {\r",
              "    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
              "});\r",
              "var currentStatus = pm.variables.get(\"status\")\r",
              "//Checks that all items in the response have the request that was sent in the queryparm \r",
              "pm.test(\"Test response for Status: \" + currentStatus, () => {\r",
              "    let jsonData = pm.response.json();\r",
              "\r",
              "    _.each(jsonData, (item) => {\r",
              "        pm.expect(item.status).to.eql(currentStatus)\r",
              "    })\r",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "oauth2"
        },
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/pet/findByStatus?status={{status}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "pet",
            "findByStatus"
          ],
          "query": [
            {
              "key": "status",
              "value": "{{status}}",
              "description": "(Required) Status values that need to be considered for filter"
            }
          ]
        },
        "description": "Multiple status values can be provided with comma separated strings"
      },
      "response": [
        {
          "name": "successful operation",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "description": "Added as a part of security scheme: oauth2",
                "key": "Authorization",
                "value": "<token>"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/pet/findByStatus?status=available&status=available",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet",
                "findByStatus"
              ],
              "query": [
                {
                  "key": "status",
                  "value": "available"
                },
                {
                  "key": "status",
                  "value": "available"
                }
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "[\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"labore eiusmod\",\n      \"labore consectetur incididunt qui\"\n    ],\n    \"id\": -34991016,\n    \"category\": {\n      \"id\": -20752171,\n      \"name\": \"laborum co\"\n    },\n    \"tags\": [\n      {\n        \"id\": -4948717,\n        \"name\": \"sint dolor veniam exercitation culpa\"\n      },\n      {\n        \"id\": 80696629,\n        \"name\": \"culpa \"\n      }\n    ],\n    \"status\": \"available\"\n  },\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"irure consequat\",\n      \"dolore veniam inc\"\n    ],\n    \"id\": 210321,\n    \"category\": {\n      \"id\": -10537877,\n      \"name\": \"sit incididunt\"\n    },\n    \"tags\": [\n      {\n        \"id\": -2794044,\n        \"name\": \"cupidatat sed magna lab\"\n      },\n      {\n        \"id\": -86416510,\n        \"name\": \"commodo cupidatat Ut\"\n      }\n    ],\n    \"status\": \"sold\"\n  }\n]"
        },
        {
          "name": "Invalid status value",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "description": "Added as a part of security scheme: oauth2",
                "key": "Authorization",
                "value": "<token>"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/pet/findByStatus?status=available&status=available",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet",
                "findByStatus"
              ],
              "query": [
                {
                  "key": "status",
                  "value": "available"
                },
                {
                  "key": "status",
                  "value": "available"
                }
              ]
            }
          },
          "status": "Bad Request",
          "code": 400,
          "_postman_previewlanguage": "text",
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "uploads an image",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "pm.test(\"Response time is less than 200ms\", function () {\r",
              "    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "oauth2"
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "multipart/form-data"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "additionalMetadata",
              "value": "Pic",
              "description": "Additional data to pass to server",
              "type": "text"
            },
            {
              "key": "file",
              "description": "file to upload",
              "type": "file",
              "src": "/C:/Users/affreenkhan/Pictures/Screenshot_21.png"
            }
          ]
        },
        "url": {
          "raw": "{{baseUrl}}/pet/:petId/uploadImage",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "pet",
            ":petId",
            "uploadImage"
          ],
          "variable": [
            {
              "key": "petId",
              "value": "{{petId}}",
              "description": "(Required) ID of pet to update"
            }
          ]
        }
      },
      "response": [
        {
          "name": "successful operation",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "description": "Added as a part of security scheme: oauth2",
                "key": "Authorization",
                "value": "<token>"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "additionalMetadata",
                  "value": "esse sint irure",
                  "description": "Additional data to pass to server",
                  "type": "text"
                },
                {
                  "key": "file",
                  "description": "file to upload",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/pet/:petId/uploadImage",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet",
                ":petId",
                "uploadImage"
              ],
              "variable": [
                {
                  "key": "petId",
                  "value": "-2742673",
                  "description": "(Required) ID of pet to update"
                }
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"code\": 54611594,\n  \"type\": \"proident pariatur voluptate labore\",\n  \"message\": \"et do\"\n}"
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://petstore.swagger.io/v2",
      "type": "string"
    },
    {
      "key": "dogName",
      "value": ""
    },
    {
      "key": "petId",
      "value": ""
    },
    {
      "key": "status",
      "value": ""
    },
    {
      "key": "statusList",
      "value": ""
    },
    {
      "key": "changedName",
      "value": ""
    },
    {
      "key": "changedStatus",
      "value": ""
    }
  ]
}